{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthInterceptor {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(req, next) {\n    const token = this.auth.getToken();\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + token)\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["AuthInterceptor","constructor","auth","intercept","req","next","token","getToken","cloned","clone","headers","set","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["E:\\ProjectGit\\frontend-web\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const token = this.auth.getToken();\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer ' + token),\n      });\n      return next.handle(cloned);\n    }\n    return next.handle(req);\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACK,QAAQ,EAAE;IAClC,IAAID,KAAK,EAAE;MACT,MAAME,MAAM,GAAGJ,GAAG,CAACK,KAAK,CAAC;QACvBC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGL,KAAK;OAC5D,CAAC;MACF,OAAOD,IAAI,CAACO,MAAM,CAACJ,MAAM,CAAC;;IAE5B,OAAOH,IAAI,CAACO,MAAM,CAACR,GAAG,CAAC;EACzB;;;uBAZWJ,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAfhB,eAAe;MAAAiB,OAAA,EAAfjB,eAAe,CAAAkB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}