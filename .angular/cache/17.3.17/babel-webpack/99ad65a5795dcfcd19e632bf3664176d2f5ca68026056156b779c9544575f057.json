{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api';\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/auth/login`, {\n      username,\n      password\n    }).pipe(tap(res => localStorage.setItem('token', res.token)));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["tap","AuthService","constructor","http","apiUrl","login","username","password","post","pipe","res","localStorage","setItem","token","getToken","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["E:\\ProjectGit\\frontend-web\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n  private apiUrl = 'http://localhost:5000/api';\n  constructor(private http: HttpClient) {}\n\n  login(username: string, password: string) {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/auth/login`, { username, password }).pipe(\n      tap(res => localStorage.setItem('token', res.token))\n    );\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,2BAA2B;EACL;EAEvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAoB,GAAG,IAAI,CAACJ,MAAM,aAAa,EAAE;MAAEE,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CAChGT,GAAG,CAACU,GAAG,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,GAAG,CAACG,KAAK,CAAC,CAAC,CACrD;EACH;EAEAC,QAAQA,CAAA;IACN,OAAOH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EACtC;;;uBAZWd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXlB,WAAW;MAAAmB,OAAA,EAAXnB,WAAW,CAAAoB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}